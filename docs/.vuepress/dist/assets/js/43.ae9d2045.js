(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{329:function(s,t,a){"use strict";a.r(t);var n=a(14),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"凹凸折痕问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#凹凸折痕问题"}},[s._v("#")]),s._v(" 凹凸折痕问题")]),s._v(" "),t("p",[s._v("📘微软的面试过程中，有一个著名的逻辑思维题目，被称为“打印凹凸折痕问题”。考察的是应聘者对递归思想的理解及其在实际场景中的应用。")]),s._v(" "),t("h2",{attrs:{id:"🔍-面试原题概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🔍-面试原题概述"}},[s._v("#")]),s._v(" 🔍 面试原题概述")]),s._v(" "),t("p",[s._v("原题的内容大致是这样的：")]),s._v(" "),t("p",[s._v("把一张长纸条对折一次（面朝自己，从上往下折），然后展开，会发现纸条在折痕处形成了“凹”形状的折痕。如果再将纸条对折（折痕朝内）并展开，会形成“凸凹凹”形状的折痕序列。那么请问，如果连续对折n次，展开后的纸条上的折痕序列是怎样的？并请使用编程语言实现这一逻辑。")]),s._v(" "),t("h2",{attrs:{id:"💡-学习这道面试题的理由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#💡-学习这道面试题的理由"}},[s._v("#")]),s._v(" 💡 学习这道面试题的理由")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("思维训练")]),s._v("：这道题能够锻炼你的递归思维能力，这是计算机科学的核心概念之一。")]),s._v(" "),t("li",[t("strong",[s._v("解决问题能力")]),s._v("：学习如何将现实问题转化为可以编程解决的形式。")]),s._v(" "),t("li",[t("strong",[s._v("编程技巧")]),s._v("：提高你的编程技巧，特别是对于递归函数的编写能力。")]),s._v(" "),t("li",[t("strong",[s._v("算法应用")]),s._v("：提升你在算法和数据结构上的应用能力。")])]),s._v(" "),t("h2",{attrs:{id:"🌟-这道题目的应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🌟-这道题目的应用"}},[s._v("#")]),s._v(" 🌟 这道题目的应用")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("计算机科学")]),s._v("：理解递归在算法设计中的作用，比如文件系统的目录结构遍历。")]),s._v(" "),t("li",[t("strong",[s._v("工程问题")]),s._v("：传统工程问题或设计中，使用递归解决重复性问题，比如在机械零件设计中的重复性结构。")]),s._v(" "),t("li",[t("strong",[s._v("科学研究")]),s._v("：分形学等科学研究中，很多自然现象的模型都是递归的，如分布式计算中的tree-based algorithms。")]),s._v(" "),t("li",[t("strong",[s._v("教育工具")]),s._v("：在计算机科学教育中，递归是必学的概念，这道题目恰好可以作为教学案例。")])]),s._v(" "),t("h2",{attrs:{id:"📝-算法图解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#📝-算法图解"}},[s._v("#")]),s._v(" 📝 算法图解")]),s._v(" "),t("p",[t("img",{attrs:{src:"/g1_data_struct_binary_tree_12_paper_floding.assets/binary_tree_paper_folding.drawio.png",alt:""}})]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("递归基础")]),s._v("：确认递归的基础情形，通常是最简单或最小的问题规模。")]),s._v(" "),t("li",[t("strong",[s._v("递归规则")]),s._v("：确定如何将问题分解，并递归地解决每个子问题。")]),s._v(" "),t("li",[t("strong",[s._v("整合结果")]),s._v("：如何将子问题的解决方案合并以解决原问题。")])]),s._v(" "),t("p",[s._v("对于凹凸折痕问题，可以构思一个递归模型。每次对折，实际上是在上一次基础上增加了新的折痕，凹折痕左边永远是凹，右边永远是凸。")]),s._v(" "),t("h2",{attrs:{id:"🚀-go语言实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🚀-go语言实现"}},[s._v("#")]),s._v(" 🚀 Go语言实现")]),s._v(" "),t("p",[s._v("下面是用Go语言实现这个问题的示例代码：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" binary_tree\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("PrintAllFolds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("N "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("PrintAllFoldsProcess")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" N"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("PrintAllFoldsProcess")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("curLevel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" maxLevel "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" down "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" curLevel "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" maxLevel "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("PrintAllFoldsProcess")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("curLevel "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" maxLevel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" direct "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" down "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tdirect "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"凹"')]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tdirect "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"凸"')]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\tfmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("direct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("PrintAllFoldsProcess")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("curLevel "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" maxLevel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);