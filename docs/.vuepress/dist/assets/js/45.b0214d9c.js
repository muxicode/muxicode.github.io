(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{329:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),s("h2",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("对应底层数据结构")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/runtime/string.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" stringStruct "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tstr unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer\n\t"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/reflect/value.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StringHeader "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tData "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uintptr")]),t._v("\n\tLen  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("字符串本质是一个结构体")])]),t._v(" "),s("li",[s("p",[t._v("Data指针指向底层Byte数组")])]),t._v(" "),s("li",[s("p",[t._v("Len表示的是Byte数组的长度")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好"')]),t._v("\nsh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StringHeader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Pointer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])]),t._v(" "),s("h3",{attrs:{id:"字符串的编码问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的编码问题"}},[t._v("#")]),t._v(" 字符串的编码问题")]),t._v(" "),s("ul",[s("li",[t._v("所有的字符串均使用Unicode字符集")]),t._v(" "),s("li",[t._v("使用utf-8编码")])]),t._v(" "),s("h3",{attrs:{id:"unicode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unicode"}},[t._v("#")]),t._v(" Unicode")]),t._v(" "),s("ul",[s("li",[t._v("一种统一的字符集")]),t._v(" "),s("li",[t._v("囊括了159种文字的144679个字符")]),t._v(" "),s("li",[t._v("14万个字符至少需要3个字节表示")]),t._v(" "),s("li",[t._v("英文字母均排在前128个")])]),t._v(" "),s("h3",{attrs:{id:"utf-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#utf-8"}},[t._v("#")]),t._v(" UTF-8")]),t._v(" "),s("ul",[s("li",[t._v("Unicode 的一种变长格式")]),t._v(" "),s("li",[t._v("128 个 US-ASCII字符只需要一个字节编码")]),t._v(" "),s("li",[t._v("西方常用字符需要两个字节比如：希腊字母")]),t._v(" "),s("li",[t._v("其他字符需要三个字节，如：中、日，韩文")])]),t._v(" "),s("h3",{attrs:{id:"字符串的访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的访问"}},[t._v("#")]),t._v(" 字符串的访问")]),t._v(" "),s("ul",[s("li",[t._v("对字符串使用len方法得到的是字节数，不是字符数")]),t._v(" "),s("li",[t._v("对字符串直接使用下标访问，得到的是字节")]),t._v(" "),s("li",[t._v("字符串被range遍历时，被解码程rune类型的字符串")]),t._v(" "),s("li",[t._v("UTF-8编码解码的算法位于 runtime/utf8.go")])]),t._v(" "),s("h3",{attrs:{id:"字符串的切分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的切分"}},[t._v("#")]),t._v(" 字符串的切分")]),t._v(" "),s("ul",[s("li",[t._v("需要切分时\n"),s("ul",[s("li",[t._v("转为rune数组")]),t._v(" "),s("li",[t._v("切片")]),t._v(" "),s("li",[t._v("转为string")])])])]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rune")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"切片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切片"}},[t._v("#")]),t._v(" 切片")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("长度 24 个字节")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// runtime/slice.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" slice "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tarray unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer\n\t"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("本质是对数组的引用")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E5%88%87%E7%89%87%E5%BA%95%E5%B1%82.drawio.png",alt:""}})])])]),t._v(" "),s("h3",{attrs:{id:"切片的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切片的创建"}},[t._v("#")]),t._v(" 切片的创建")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("根据数组创建")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" or slice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("字面量：编译时插入创建数组的代码")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("slice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("make: 运行时创建数组")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("slice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用runtime.go/makeslice的方法")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])]),t._v(" "),s("h3",{attrs:{id:"切片的追加"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切片的追加"}},[t._v("#")]),t._v(" 切片的追加")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("不用扩容时，只调整len（编译器负责）")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("ans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ans"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("扩容时，编译时转为调用runtime.growslice()")])]),t._v(" "),s("li",[s("p",[t._v("如果期望容量大于当前容量的两倍就会使用期望容量")])]),t._v(" "),s("li",[s("p",[t._v("如果当前的切片长度小于1024，将容量翻倍")])]),t._v(" "),s("li",[s("p",[t._v("如果当前切片的长度大于1024，每次增加25%")])]),t._v(" "),s("li",[s("p",[t._v("切片扩容时候，并发不安全，注意切片并发要加锁")])])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("字符串与切片都是对底层数组的引用")]),t._v(" "),s("li",[t._v("字符串有UTF-8变长编码的特点")]),t._v(" "),s("li",[t._v("切片的容量和长度不同")]),t._v(" "),s("li",[t._v("切片追加时可能需要重建底层数组")])]),t._v(" "),s("h2",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("h3",{attrs:{id:"重写redis能用它吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重写redis能用它吗"}},[t._v("#")]),t._v(" 重写Redis能用它吗？")]),t._v(" "),s("h3",{attrs:{id:"hashmap的基本方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap的基本方案"}},[t._v("#")]),t._v(" HashMap的基本方案")]),t._v(" "),s("ul",[s("li",[t._v("开放寻址法")]),t._v(" "),s("li",[t._v("拉练法")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E6%8B%89%E9%93%BE%E6%B3%95.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"go的hashmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go的hashmap"}},[t._v("#")]),t._v(" Go的HashMap")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/hmap.drawio.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("对应 runtime/map.go hmap 结构体")])]),t._v(" "),s("h3",{attrs:{id:"gomap-初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gomap-初始化"}},[t._v("#")]),t._v(" GoMap 初始化")]),t._v(" "),s("ul",[s("li",[t._v("make")]),t._v(" "),s("li",[t._v("字面量")])]),t._v(" "),s("p",[t._v("make：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"/struct.assets/go%E5%88%9B%E5%BB%BAmap.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("字面量：")]),t._v(" "),s("p",[t._v("元素少于25个")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于")]),t._v("\nhash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nhash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nhash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("元素多于25个时")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("   \n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"26"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于")]),t._v("\nhash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvstatk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"26"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nvstatV "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vstack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("vstatk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vstatv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h3",{attrs:{id:"map的访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map的访问"}},[t._v("#")]),t._v(" Map的访问")]),t._v(" "),s("p",[t._v("计算桶号")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E8%AE%A1%E7%AE%97%E6%A1%B6%E5%8F%B7.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("计算tophash")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E8%AE%A1%E7%AE%97tophash.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("根据值找到元素")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/map%E5%8C%B9%E9%85%8D.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("Go语言使用了拉链实现了hashmap")]),t._v(" "),s("li",[t._v("每一个同中存储键哈希的前八位")]),t._v(" "),s("li",[t._v("桶超出8个数据，就会存储到溢出桶中")])]),t._v(" "),s("h2",{attrs:{id:"map-扩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-扩容"}},[t._v("#")]),t._v(" Map 扩容")]),t._v(" "),s("p",[t._v("哈希碰撞")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E5%93%88%E5%B8%8C%E7%A2%B0%E6%92%9E.drawio.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("map溢出桶太多时会导致严重的性能下降")]),t._v(" "),s("li",[t._v("map.go/mapassing方法往map中插入数据 637行，触发扩容")])]),t._v(" "),s("ol",[s("li",[t._v("是否在扩容当中")]),t._v(" "),s("li",[t._v("装载因子（装载因子超过6.5，平均每个槽6.5key）")]),t._v(" "),s("li",[t._v("使用了太多的溢出桶（溢出桶的数量超过了普通桶）")])]),t._v(" "),s("h3",{attrs:{id:"map的扩容类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map的扩容类型"}},[t._v("#")]),t._v(" map的扩容类型")]),t._v(" "),s("ul",[s("li",[t._v("等量扩容：数据不多，但是溢出桶太多了（整理）")]),t._v(" "),s("li",[t._v("翻倍扩容：数据太多了")])]),t._v(" "),s("h3",{attrs:{id:"map扩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map扩容"}},[t._v("#")]),t._v(" map扩容")]),t._v(" "),s("ul",[s("li",[t._v("map.go/hashGrow()")]),t._v(" "),s("li",[t._v("map.go/mapassing")])]),t._v(" "),s("p",[t._v("步骤一：")]),t._v(" "),s("ol",[s("li",[t._v("创建一组新的桶")]),t._v(" "),s("li",[t._v("oldbuckets 指向原有的桶数组")]),t._v(" "),s("li",[t._v("buckets指向新的桶数组")]),t._v(" "),s("li",[t._v("map标记为扩容状态")])]),t._v(" "),s("p",[t._v("步骤二：")]),t._v(" "),s("ol",[s("li",[t._v("将所有的数据从旧桶驱逐到新桶")]),t._v(" "),s("li",[t._v("采用渐进式驱逐")]),t._v(" "),s("li",[t._v("每次操作一个旧桶时，将旧桶数据驱逐到新桶")]),t._v(" "),s("li",[t._v("读取时不进行驱逐，值判断读取新桶还是旧桶")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E6%A1%B6%E7%9A%84%E6%89%A9%E5%AE%B9.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("步骤三：")]),t._v(" "),s("ol",[s("li",[t._v("所有的旧桶驱逐完成后")]),t._v(" "),s("li",[t._v("oldbuckets回收")])]),t._v(" "),s("h3",{attrs:{id:"总结-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("装载系数太高或者溢出桶的增加，会触发map扩容")]),t._v(" "),s("li",[t._v("”扩容“可能并不是增加桶数，而是整理")]),t._v(" "),s("li",[t._v("map采用扩容采用渐进式，桶被操作时才会重新分配")])]),t._v(" "),s("h2",{attrs:{id:"怎么解决map的并发问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决map的并发问题"}},[t._v("#")]),t._v(" 怎么解决Map的并发问题？")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TestStrcut")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tmaptest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" maptest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tmaptest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fatal error: concurrent map read and map write")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("ul",[s("li",[t._v("map的读写有并发问题")]),t._v(" "),s("li",[t._v("A协程在桶中读数据时，B协程驱逐了这个桶")]),t._v(" "),s("li",[t._v("A协程会读到错误的数据或者找不到数据")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/map%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"map并发问题解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map并发问题解决"}},[t._v("#")]),t._v(" map并发问题解决")]),t._v(" "),s("ul",[s("li",[t._v("map加锁（mutex）并发下性能损失巨大")]),t._v(" "),s("li",[t._v("使用 sync.Map (做到性能损失可控)")])]),t._v(" "),s("h3",{attrs:{id:"syncmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#syncmap"}},[t._v("#")]),t._v(" syncMap")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/syncMap.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("追加时：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/syncMap%E8%BF%BD%E5%8A%A0.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("追加读写：")]),t._v(" "),s("p",[s("img",{attrs:{src:"D:%5C%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE%5Cgithub%5Cmuxicode.github.io%5Cdocs.vuepress%5Cpublic%5Cstruct.assets%5CsyncMap%E8%BF%BD%E5%8A%A0%E8%AF%BB%E5%86%99.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("dirty提升：")]),t._v(" "),s("p",[t._v("![](/struct.assets/syncMap diry 提升.drawio.png)")]),t._v(" "),s("p",[t._v("sync.Map 删除")]),t._v(" "),s("ul",[s("li",[t._v("相比于查询、修改、新增，删除更麻烦")]),t._v(" "),s("li",[t._v("删除可以分为正常删除和追加后删除")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/syncMap%E8%BF%BD%E5%8A%A0%E5%90%8E%E5%88%A0%E9%99%A4.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("dirty提升情况下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/syncMap%E5%88%A0%E9%99%A4%E5%90%8E%E6%8F%90%E5%8D%87dirty.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"总结-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-4"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("map在扩容时会有并发问题")]),t._v(" "),s("li",[t._v("sync.Map 使用了两个map，分离了扩容的问题")]),t._v(" "),s("li",[t._v("不会引发扩容的操作（查，改）使用 read map")]),t._v(" "),s("li",[t._v("可能引发扩容的操作（新增）使用dirty map")])]),t._v(" "),s("p",[t._v("读多追加少的情况sync.Map 性能好，如果追加多的话其实和map性能差距不大。")]),t._v(" "),s("h2",{attrs:{id:"接口-隐式接口好还是显示接口好"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口-隐式接口好还是显示接口好"}},[t._v("#")]),t._v(" 接口：隐式接口好还是显示接口好？")]),t._v(" "),s("h3",{attrs:{id:"go隐式接口的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go隐式接口的特点"}},[t._v("#")]),t._v(" Go隐式接口的特点")]),t._v(" "),s("ul",[s("li",[t._v("只要实现了接口的全部方法，就是自动实现接口")]),t._v(" "),s("li",[t._v("可以不在修改代码的情况下抽象出新的接口")])]),t._v(" "),s("h3",{attrs:{id:"接口值的底层表示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口值的底层表示"}},[t._v("#")]),t._v(" 接口值的底层表示")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// runtime/runtime2.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" iface "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ttab  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("itab\n\tdata unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 万能指针 指向实际的结构体")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" itab "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tinter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("interfacetype "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接口的类型")]),t._v("\n\t_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("_type\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接口的值")]),t._v("\n\thash  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// copy of _type.hash. Used for type switches.")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n\tfun   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uintptr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// variable sized. fun[0]==0 means _type does not implement inter.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h3",{attrs:{id:"类型断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型断言"}},[t._v("#")]),t._v(" 类型断言")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" TrafficTool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    \tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("类型断言时一个使用在接口值上的操作")]),t._v(" "),s("li",[t._v("可以将接口值转换为其他类型值（实现或者兼容接口）")]),t._v(" "),s("li",[t._v("可以配合switch进行类型判断")])]),t._v(" "),s("h3",{attrs:{id:"结构体和指针实现接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体和指针实现接口"}},[t._v("#")]),t._v(" 结构体和指针实现接口")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E6%8C%87%E9%92%88%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"空接口值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空接口值"}},[t._v("#")]),t._v(" 空接口值")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比接口结构体更简单，只有类型和值，可以表示所有的类型和值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" eface "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("_type\n\tdata  unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ul",[s("li",[t._v("runtime.eface 结构体")]),t._v(" "),s("li",[t._v("空接口底层不是普通接口")]),t._v(" "),s("li",[t._v("空接口可以承载任何数据")])]),t._v(" "),s("h3",{attrs:{id:"空接口的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空接口的作用"}},[t._v("#")]),t._v(" 空接口的作用")]),t._v(" "),s("ul",[s("li",[t._v("空接口的最大用途时作为任意类型的函数入参")]),t._v(" "),s("li",[t._v("函数调用时，会新生成一个空接口，再传参")])]),t._v(" "),s("h3",{attrs:{id:"总结-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-5"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("Go的隐式接口更加方便系统的拓展和重构")]),t._v(" "),s("li",[t._v("结构体和指针都可以实现接口")]),t._v(" "),s("li",[t._v("空接口的值可以承载任何类型的数据")])]),t._v(" "),s("h2",{attrs:{id:"nil-空接口-空结构体有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nil-空接口-空结构体有什么区别"}},[t._v("#")]),t._v(" nil，空接口，空结构体有什么区别？")]),t._v(" "),s("h3",{attrs:{id:"nil"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nil"}},[t._v("#")]),t._v(" nil")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nil is a predeclared identifier representing the zero value for a")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pointer, channel, func, interface, map, or slice type.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" Type "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Type must be a pointer, channel, func, interface, map, or slice type")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("nil 是空，并不一定是 ”空指针“")]),t._v(" "),s("li",[t._v("nil 是六种类型的”零值“")]),t._v(" "),s("li",[t._v("每种类型的nil是不同的，无法比较")])]),t._v(" "),s("h3",{attrs:{id:"空结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空结构体"}},[t._v("#")]),t._v(" 空结构体")]),t._v(" "),s("ul",[s("li",[t._v("空结构体是Go中非常特殊的类型")]),t._v(" "),s("li",[t._v("空结构体的值不是nil")]),t._v(" "),s("li",[t._v("空结构提的指针也不是nil，但是都相同（zerobase）")])]),t._v(" "),s("h3",{attrs:{id:"空接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空接口"}},[t._v("#")]),t._v(" 空接口")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TestStrcut")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\ta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("ul",[s("li",[t._v("空接口不一定是 ”nil 接口“")]),t._v(" "),s("li",[t._v("两个属性都是nil才是nil接口")])]),t._v(" "),s("h3",{attrs:{id:"总结-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-6"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("nil是多个类型的零值，或者空值")]),t._v(" "),s("li",[t._v("空结构体的指针和值都不是nil")]),t._v(" "),s("li",[t._v("空接口零值是nil，一旦有了类型信息就不是nil")])]),t._v(" "),s("h2",{attrs:{id:"实战-内存对齐是如何优化程序效率的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战-内存对齐是如何优化程序效率的"}},[t._v("#")]),t._v(" 实战：内存对齐是如何优化程序效率的？")]),t._v(" "),s("h3",{attrs:{id:"结构体size"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体size"}},[t._v("#")]),t._v(" 结构体size")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TestStrcut")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" S1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnum1 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n\t\tnum2 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" S2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnum1 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n\t\tnum2 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int16")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8 8")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("ul",[s("li",[t._v("为什么两个结构体的大小是相同的？")])]),t._v(" "),s("h3",{attrs:{id:"非内存对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非内存对齐"}},[t._v("#")]),t._v(" 非内存对齐")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/strcut%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90.drawio.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("非内存对齐：内存的原子性与效率受到影响")])]),t._v(" "),s("h3",{attrs:{id:"内存对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存对齐"}},[t._v("#")]),t._v(" 内存对齐")]),t._v(" "),s("p",[s("img",{attrs:{src:"D:%5C%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE%5Cgithub%5Cmuxicode.github.io%5Cdocs.vuepress%5Cpublic%5Cstruct.assets%5C%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90.drawio.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("内存对齐：提高内存操作效率，有利于内存原子性")])]),t._v(" "),s("h3",{attrs:{id:"对齐系数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对齐系数"}},[t._v("#")]),t._v(" 对齐系数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("为了方便内存对齐，Go提供了对齐系数")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Alignof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("对齐系数的含义是：变量的内存地址必须被对齐系数整除")])]),t._v(" "),s("li",[s("p",[t._v("如果对齐系数为4，表示变量内存地址必须是4的倍数")])]),t._v(" "),s("li",[s("p",[t._v("对齐系数：系统字长与变量长度取小值")])])]),t._v(" "),s("h3",{attrs:{id:"基本数据类型对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型对齐"}},[t._v("#")]),t._v(" 基本数据类型对齐")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TestAlign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bool size: %d, align: %d \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Alignof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"byte size: %d, align: %d \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Alignof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int8 size: %d, align: %d \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Alignof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int16 size: %d, align: %d \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Alignof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int32 size: %d, align: %d \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Alignof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int64 size: %d, align: %d \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Alignof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//bool size: 1, align: 1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//byte size: 1, align: 1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//int8 size: 1, align: 1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//int16 size: 2, align: 2")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//int32 size: 4, align: 4")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//int64 size: 8, align: 8")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[s("img",{attrs:{src:"/struct.assets/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%AF%B9%E9%BD%90.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"结构体对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体对齐"}},[t._v("#")]),t._v(" 结构体对齐")]),t._v(" "),s("ul",[s("li",[t._v("结构体对齐为内部对齐和结构体之间对齐")]),t._v(" "),s("li",[t._v("内部对齐：考虑成员大小和成员的对齐系数")]),t._v(" "),s("li",[t._v("结构体长度填充：考虑自身对齐系数和系统字长")])]),t._v(" "),s("h3",{attrs:{id:"结构体体内部对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体体内部对齐"}},[t._v("#")]),t._v(" 结构体体内部对齐")]),t._v(" "),s("ul",[s("li",[t._v("指的是结构体内部成员的相对位置（偏移量）")]),t._v(" "),s("li",[t._v("每个成员的偏移量是自身大小与其对齐系数较小值的倍数")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E7%BB%93%E6%9E%84%E4%BD%93%E5%86%85%E9%83%A8%E5%AF%B9%E9%BD%90.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("严格遵守结构体内字段的顺序")]),t._v(" "),s("h3",{attrs:{id:"结构体长度填充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体长度填充"}},[t._v("#")]),t._v(" 结构体长度填充")]),t._v(" "),s("ul",[s("li",[t._v("指的是结构体通过增加长度，对齐系统字长")]),t._v(" "),s("li",[t._v("结构体长度是"),s("strong",[t._v("最大成员长度")]),t._v("与"),s("strong",[t._v("系统字长")]),t._v("较小的整数倍")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E7%BB%93%E6%9E%84%E4%BD%93%E9%95%BF%E5%BA%A6%E5%A1%AB%E5%85%85.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"结构体对齐系数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体对齐系数"}},[t._v("#")]),t._v(" 结构体对齐系数")]),t._v(" "),s("ul",[s("li",[t._v("为什么string的对齐系数是8？")]),t._v(" "),s("li",[t._v("刚才Demo结构体，对齐系数是多少？")]),t._v(" "),s("li",[t._v("结构体的对齐系数是其成员的最大对齐系数")])]),t._v(" "),s("h3",{attrs:{id:"空结构体的对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空结构体的对齐"}},[t._v("#")]),t._v(" 空结构体的对齐")]),t._v(" "),s("ul",[s("li",[t._v("空结构体单独出现时，地址为zerobase")]),t._v(" "),s("li",[t._v("空结构体出现在结构体中时，地址跟随前一个变量")]),t._v(" "),s("li",[t._v("空结构体出现在结构体末尾时，需要补齐字长")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E7%A9%BA%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%AF%B9%E9%BD%90.drawio.png",alt:""}})]),t._v(" "),s("p",[t._v("空结构体在末尾时：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/struct.assets/%E7%A9%BA%E7%BB%93%E6%9E%84%E4%BD%93%E5%9C%A8%E6%9C%AB%E5%B0%BE%E8%A1%A5%E9%9B%B6.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"总结-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-7"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("提高内存操作的效率，变量之间需要内存对齐")]),t._v(" "),s("li",[t._v("基本类型考虑对齐系数")]),t._v(" "),s("li",[t._v("结构体既需要内部对齐，有需要外部填充对齐")]),t._v(" "),s("li",[t._v("空结构体最为最后一个成员，需要填充对齐（防止后面的变量与空结构体共用同一个地址，gc下有危险）")])]),t._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("h3",{attrs:{id:"变量长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量长度"}},[t._v("#")]),t._v(" 变量长度")]),t._v(" "),s("ul",[s("li",[t._v("Go部分数据的长度与系统字长有关")]),t._v(" "),s("li",[t._v("空结构体不占用空间")]),t._v(" "),s("li",[t._v("空结构体与map结合实现hashset")]),t._v(" "),s("li",[t._v("空结构体与channel结合可以当作存信号")])]),t._v(" "),s("h3",{attrs:{id:"内存对齐-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存对齐-2"}},[t._v("#")]),t._v(" 内存对齐")]),t._v(" "),s("ul",[s("li",[t._v("提高内存操作效率，变量之间需要内存对齐")]),t._v(" "),s("li",[t._v("基本类型考虑对齐系数")]),t._v(" "),s("li",[t._v("结构体既需要内部对齐，又需要外部填充对齐")]),t._v(" "),s("li",[t._v("空结构体作为最后一个成员，需要填充对齐")])]),t._v(" "),s("h3",{attrs:{id:"字符串与切片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串与切片"}},[t._v("#")]),t._v(" 字符串与切片")]),t._v(" "),s("ul",[s("li",[t._v("字符串与切片都是对底层数组的引用")]),t._v(" "),s("li",[t._v("字符串有UTF-8变长编码的特点")]),t._v(" "),s("li",[t._v("切片的容量和长度不同")]),t._v(" "),s("li",[t._v("切片追加时可能需要重建底层数组")])]),t._v(" "),s("h3",{attrs:{id:"map-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-2"}},[t._v("#")]),t._v(" map")]),t._v(" "),s("ul",[s("li",[t._v("Go语言使用了拉链实现了hashmap")]),t._v(" "),s("li",[t._v("每一个桶中存储了哈希的前8位")]),t._v(" "),s("li",[t._v("桶超出8个数据，就会存储到溢出桶中")])]),t._v(" "),s("h3",{attrs:{id:"map扩容-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map扩容-2"}},[t._v("#")]),t._v(" map扩容")]),t._v(" "),s("ul",[s("li",[t._v("装载系数或者溢出桶的增加，会触发map扩容")]),t._v(" "),s("li",[t._v("”扩容“并不是增加桶数，而是整理")]),t._v(" "),s("li",[t._v("map采用渐进式，桶被操作时才会重新分配")])]),t._v(" "),s("h3",{attrs:{id:"sync-map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sync-map"}},[t._v("#")]),t._v(" sync.Map")]),t._v(" "),s("ul",[s("li",[t._v("map 在扩容时会有并发问题")]),t._v(" "),s("li",[t._v("sync.Map使用了两个map，分离了扩容问题")]),t._v(" "),s("li",[t._v("不会引发扩容的操作（查，改），使用read map")]),t._v(" "),s("li",[t._v("可能引发扩容的操作（新增）使用dirty map")])]),t._v(" "),s("h3",{attrs:{id:"接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),s("ul",[s("li",[t._v("Go的隐式接口更加方便系统的拓展和重构")]),t._v(" "),s("li",[t._v("结构体和指针都可以实现接口")]),t._v(" "),s("li",[t._v("空接口可以承载任何数据")])]),t._v(" "),s("h3",{attrs:{id:"nil-空结构体-空接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nil-空结构体-空接口"}},[t._v("#")]),t._v(" nil/空结构体/空接口")]),t._v(" "),s("ul",[s("li",[t._v("nil是多个类型的零值，或者空值")]),t._v(" "),s("li",[t._v("空结构体的指针和值都不是nil")]),t._v(" "),s("li",[t._v("空接口零值是nil，一旦有了类型信息就不是nil")])]),t._v(" "),s("h3",{attrs:{id:"练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[t._v("#")]),t._v(" 练习")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tA "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n\t\tB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n\t\tC "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tD "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n\t\tE "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"User size: %d, align: %d \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Alignof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);