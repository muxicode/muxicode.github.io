(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{334:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"拷贝含有随机指针的链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拷贝含有随机指针的链表"}},[t._v("#")]),t._v(" 拷贝含有随机指针的链表")]),t._v(" "),s("p",[t._v("请实现 "),s("code",[t._v("copyRandomList")]),t._v(" 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 "),s("code",[t._v("next")]),t._v(" 指针指向下一个节点，还有一个 "),s("code",[t._v("random")]),t._v(" 指针指向链表中的任意节点或者 "),s("code",[t._v("null")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/g1_data_struct_linked_list_8_copy_random_list.assets/linked_list_copy_random_list.drawio.png",alt:""}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("使用map容器方法特别简单，映射新老节点并拷贝指针。")])]),t._v(" "),s("li",[s("p",[t._v("改原链表的方法拷贝")])])]),t._v(" "),s("h2",{attrs:{id:"算法流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法流程"}},[t._v("#")]),t._v(" 算法流程")]),t._v(" "),s("h3",{attrs:{id:"容器法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器法"}},[t._v("#")]),t._v(" 容器法")]),t._v(" "),s("ol",[s("li",[t._v("先遍历原始链表，将原始链表的节点添加到map的key中，并创建对应的新节点")]),t._v(" "),s("li",[t._v("再次遍历原始链表的节点，分别执行步骤二的表达式，拷贝老节点的引用到新节点上")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/g1_data_struct_linked_list_8_copy_random_list.assets/linked_list_copy_random_list1.drawio.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"修改原链表法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改原链表法"}},[t._v("#")]),t._v(" 修改原链表法")]),t._v(" "),s("ol",[s("li",[t._v("在原链表中老节点后新建拷贝节点，并放在新节点后面")]),t._v(" "),s("li",[t._v("新节点拷贝老节点的random指针")]),t._v(" "),s("li",[t._v("拆开新老节点得到拷贝的链表")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/g1_data_struct_linked_list_8_copy_random_list.assets/linked_list_copy_random_list2.drawio.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),s("blockquote",[s("p",[t._v("修改链表的解法")])]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyRandomList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Node "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tcur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" head\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nextTmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Node\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入新节点")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnextTmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\t\tcur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tcur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextTmp\n\t\tcur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextTmp\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拷贝random指针")]),t._v("\n\tcur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" curCopy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Node\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnextTmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\t\tcurCopy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Random "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcurCopy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Random "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tcur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextTmp\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拆分链表")]),t._v("\n\tcopyHead "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\tcur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnextTmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\t\tcurCopy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\t\tcur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curCopy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" nextTmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcurCopy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextTmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Next\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tcur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextTmp\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" copyHead\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);